<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CommandArgumentsError" xml:space="preserve">
    <value>If a configuration file is specified, it is not allowed to specify basic settings by command line parameters. You can use either the command line parameters or the configuration file for the specification of basic settings.</value>
  </data>
  <data name="ConfigurationFileMisconfigured" xml:space="preserve">
    <value>The item {0} is missing in your configuration file.</value>
  </data>
  <data name="ConfigurationFileNotExistsError" xml:space="preserve">
    <value>The specified configuration file does not exist.</value>
  </data>
  <data name="ExitInformation" xml:space="preserve">
    <value>Press any key to exit the console.</value>
  </data>
  <data name="FileExistsError" xml:space="preserve">
    <value>The specified file where to store the report already exists. Either set the overwrite option to true or specify another file name.</value>
  </data>
  <data name="FilenameNotSpecifiedError" xml:space="preserve">
    <value>The file path where to store the document was not specified.</value>
  </data>
  <data name="FileSavedInformation" xml:space="preserve">
    <value>The document has been saved to {0}</value>
  </data>
  <data name="NoWorkItemsFoundInformation" xml:space="preserve">
    <value>There were no work items found for your arguments.</value>
  </data>
  <data name="OptionsNullError" xml:space="preserve">
    <value>There was no option specified how to get work items.</value>
  </data>
  <data name="OptionsNullErrorInstruction" xml:space="preserve">
    <value>Please specify either the option "WorkItemIDs" or the option WorkitemQuery.</value>
  </data>
  <data name="OptionsOverloadedError" xml:space="preserve">
    <value>It was specified to get work items by id and by query. Only one of these two options can be chosen.</value>
  </data>
  <data name="ProjectNotSpecifiedError" xml:space="preserve">
    <value>The project was not specified.</value>
  </data>
  <data name="ReadConfigurationInformation" xml:space="preserve">
    <value>Configuration file is about being read in.</value>
  </data>
  <data name="ReportCreationFailed" xml:space="preserve">
    <value>The creation of the report failed.</value>
  </data>
  <data name="ReportCreationSuccessfull" xml:space="preserve">
    <value>The report was created.</value>
  </data>
  <data name="ServerNotSpecifiedError" xml:space="preserve">
    <value>The server was not specified.</value>
  </data>
  <data name="TemplateNotSpecifiedError" xml:space="preserve">
    <value>The WordToTFS-template which should be used was not specified.</value>
  </data>
  <data name="TestSettingsConfigurationPositionError" xml:space="preserve">
    <value>There was no option specified where to place the test configuration information. The available options are "AboveTestPlan", "BeneathTestPlan", "BeneathTestSuites" or "BeneathFirstTestSuite".</value>
  </data>
  <data name="TestSettingsDocumentStructureError" xml:space="preserve">
    <value>There was no option specified how to create the document structure. The available options are "IterationPath", "AreaPath" or "TestPlanHierarchy".</value>
  </data>
  <data name="TestSettingsErrorInstruction" xml:space="preserve">
    <value>Please adapt the configuration file properly.</value>
  </data>
  <data name="TestSettingsInvalidConfigurationPositionError" xml:space="preserve">
    <value>The option specified where to place the test configuration information is not valid. The available options are "AboveTestPlan", "BeneathTestPlan", "BeneathTestSuites" or "BeneathFirstTestSuite".</value>
  </data>
  <data name="TestSettingsInvalidDocumentStructureError" xml:space="preserve">
    <value>The option specified how to create the document structure is not valid. The available options are "IterationPath", "AreaPath" or "TestPlanHierarchy".</value>
  </data>
  <data name="TestSettingsInvalidTestCasesSortError" xml:space="preserve">
    <value>The option specified how to sort the cases is not valid. cases. The available options are "IterationPath", "AreaPath" or "WorkItemId".</value>
  </data>
  <data name="TestSettingsInvalidTestPlan" xml:space="preserve">
    <value>The specified test plan does not exist.</value>
  </data>
  <data name="TestSettingsInvalidTestSuite" xml:space="preserve">
    <value>The specified test suite does not exist.</value>
  </data>
  <data name="TestSettingsTestCasesSortError" xml:space="preserve">
    <value>There was no option specified how to sort the test cases. The available options are "IterationPath", "AreaPath" or "WorkItemId".</value>
  </data>
  <data name="TestSettingsTestPlanError" xml:space="preserve">
    <value>There was no test plan specified in the configuration file.</value>
  </data>
  <data name="WordClosed" xml:space="preserve">
    <value>The document and Word have been closed</value>
  </data>
  <data name="WorkItemsCountInformation" xml:space="preserve">
    <value>Number of found work items:</value>
  </data>
  <data name="WorkItemsImportedInformation" xml:space="preserve">
    <value>All work items were imported to the document.</value>
  </data>
  <data name="Error_TemplateDoesNotExist" xml:space="preserve">
    <value>The Word template: {0} does not exist.</value>
  </data>
</root>